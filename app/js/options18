const profesorado = document.getElementById('profesorado');
const ciclosmodulos = document.getElementById('ciclosmodulos');
maximoProfesor=0;
maximoCiclo=0;
maximoModulo=0;
cargaDatos();
let numProfeActualiza=0;
let numCicloActualiza=0;
let numModuloActualiza=0;


function creaCadenaHorario(){
    cadenaProfesorado = creaCadenaProfesorado();
    cadenaCiclos = creaCadenaCiclos();
    CadenaHorario =  cadenaProfesorado + "," + cadenaCiclos;
    return CadenaHorario;
}
function creaCadenaProfesorado(){

    let cadenaProfesorado = '"profesorado": [{"nombre": "Jose Luis BenitoAndújar","horas": 0,"tipo": "PS"}]';
    cadenaProfesorado = '"profesorado": [';
    for ( i=0; i<profesorado.children.length; i++ ){
        hijo = profesorado.children[i];
        nombre = hijo.getAttribute('nombre');
        horas = hijo.getAttribute('horas');
        tipo = hijo.getAttribute('tipo');
        if (hijo.getAttribute('profe')!=null) { //SI ES UN PROFE
            cadenaProfe= '{"nombre": "'+nombre+'","horas":'+horas+',"profe":"si","tipo": "'+tipo+'"}';
        } else { //SI ES UN MÓDULO
            ciclo = hijo.getAttribute('ciclo');
            id = hijo.getAttribute('id');
            cadenaProfe= '{"nombre": "'+ nombre +'","horas":'+horas+',"ciclo": "'+ciclo+'","id": "'+id+'","tipo": "'+tipo+'"}';
        }
        if (i===0){
            cadenaProfesorado = cadenaProfesorado +cadenaProfe;
        }
        else
        {
            cadenaProfesorado = cadenaProfesorado +','+cadenaProfe;
        }
       
    }
    cadenaProfesorado = cadenaProfesorado + ']'
    return cadenaProfesorado;
}
function creaCadenaCiclos(){
    let cadenaCiclos = '"ciclos": [{"nombre": "CMS1B","modulos": [{"nombre":"Aplicaciones Web","horas": 6,	"tipo": "PS","id":"1",clonado":"2", profe": "u"}]}]';
    cadenaCiclos = '"ciclos":[';
    let abiertoCiclos = false;
    let abiertoModulos = false;
    for ( i=0; i<ciclosmodulos.children.length; i++ ){
        hijo = ciclosmodulos.children[i];
        nombre = hijo.getAttribute('nombre');
        tipo = hijo.getAttribute("tipo");

        if ( tipo=="ciclo") { //SE TRATA DE UNO CICLO
            if (abiertoCiclos ) {
                cadenaCiclos=cadenaCiclos + ']},';
            }
            abiertoModulos = false;
            cadenaCiclos = cadenaCiclos + '{"nombre":"' + nombre + '","modulos": [';
            abiertoCiclos = true;
        } else { //SE TRATA DE UN MÓDULO
            if  (abiertoModulos ) {
                cadenaCiclos = cadenaCiclos+',';
            }
            profe = hijo.getAttribute("profe");
            
            id = hijo.getAttribute("id");
            horas = hijo.getAttribute("horas");
            //clonado = hijo.getAttribute("clonado")?hijo.getAttribute("clonado"):'';
            if ( hijo.getAttribute("clonado")!=null ){
                cadenaClonado = '","clonado":"'+hijo.getAttribute("clonado")+'","profe":"'+profe;
            } else {
                cadenaClonado ='';
                }

            cadenaCiclos = cadenaCiclos +'{"nombre":"' + nombre +'","horas":'+ horas+ ',"tipo": "' + tipo + '","id":"' + id + cadenaClonado + '"}'   ; 
            abiertoModulos=true;
        }

        }
        if ( abiertoCiclos ) {
            cadenaCiclos=cadenaCiclos + ']}'; //cierro el ciclo abierto
        }
        cadenaCiclos=cadenaCiclos + ']'; //cierro todos los ciclos
        

    
    
    return cadenaCiclos;
}




function clear(node) {
  while (node.hasChildNodes()) {
    clear(node.firstChild);
  }
  
  
     node.parentNode.removeChild(node);

  
  //console.log(node, "cleared!");
}

function reinicia(){
    for ( i=0; i<profesorado.childNodes.length; i++) {
         p=profesorado.childNodes[i];
         clear(p);
    }
    //cargaDatos(true);

}
function cargaDatos(reinicia){

        if (true) {
           // Typical action to be performed when the document is ready:
           //document.getElementById("demo").innerHTML = xhttp.responseText;
           let cadenaJson = '{"profesorado": [{"nombre": "Mayte Olmedilla","horas":20,"profe":"si","tipo": "PS"},{"nombre": "Programación","horas":6,"ciclo": "1DAM-Elearning","id": "54","tipo": "PS"},{"nombre": "Servicios en Red","horas":6,"ciclo": "2SMR(Mañana)","id": "29","tipo": "PS"},{"nombre": "Lenguaje de Marcas y Sistemas","horas":4,"ciclo": "1ºDAM","id": "15","tipo": "PS"},{"nombre": "FCT (21 PRO   6 a FCT   3 REP)","horas":4,"ciclo": "2SMR(Mañana)","id": "84","tipo": "PS"},{"nombre": "Ángel Vela","horas":20,"profe":"si","tipo": "PS"},{"nombre": "Programación","horas":6,"ciclo": "1ºDAM","id": "8","tipo": "PS"},{"nombre": "Programación","horas":6,"ciclo": "1DAW(Tarde)","id": "66","tipo": "PS"},{"nombre": "Implantación de Aplicaciones Web","horas":5,"ciclo": "2ASIR(Tarde)","id": "85","tipo": "PS"},{"nombre": "Entornos de Desarrollo","horas":3,"ciclo": "1DAM-Elearning","id": "56","tipo": "PS"},{"nombre": "Fernando Tejero","horas":20,"profe":"si","tipo": "PS"},{"nombre": "Redes Locales","horas":6,"ciclo": "1SMR(Mañana)","id": "22","tipo": "PS"},{"nombre": "Aplicaciones Web","horas":6,"ciclo": "1SMR(Mañana)","id": "23","tipo": "PS"},{"nombre": "Seguridad Informática","horas":5,"ciclo": "2SMR(Mañana)","id": "28","tipo": "PS"},{"nombre": "Jefe de departamento","horas":3,"ciclo": "Reducciones","id": "83","tipo": "PS"},{"nombre": "Samuel","horas":20,"profe":"si","tipo": "PS"},{"nombre": "Desarrollos WEB en entornos servidor","horas":9,"ciclo": "2DAW(Tarde)","id": "70","tipo": "PS"},{"nombre": "Programación de servicios","horas":2,"ciclo": "2DAM-Elearning","id": "60","tipo": "PS"},{"nombre": "Jefe de Estudios FP-2","horas":9,"ciclo": "Reducciones","id": "80","tipo": "PS"},{"nombre": "Francisco Javier Cortés","horas":20,"profe":"si","tipo": "PS"},{"nombre": "Entornos de Desarrollo","horas":3,"ciclo": "1DAW(Tarde)","id": "68","tipo": "PS"},{"nombre": "Administración de sistemas gest. BD","horas":3,"ciclo": "2ASIR(Tarde)","id": "86","tipo": "PS"},{"nombre": "Seguridad Informática","horas":5,"ciclo": "2SMR(Tarde)","id": "38","tipo": "PS"},{"nombre": "Servicios en Red","horas":6,"ciclo": "2SMR(Tarde)","id": "39","tipo": "PS"},{"nombre": "FCT (15PRO 2FCT)","horas":3,"ciclo": "2SMR(Tarde)","id": "40","tipo": "PS"},{"nombre": "Ana Belén Castañeda","horas":20,"profe":"si","tipo": "PS"},{"nombre": "Redes Locales","horas":6,"ciclo": "1SMR(Tarde)","id": "32","tipo": "PS"},{"nombre": "Acceso a Datos 1h","horas":1,"ciclo": "2DAM-Elearning","id": "95","tipo": "PS"},{"nombre": "Informática 4 ESO - Acad 1","horas":2,"ciclo": "Optativas BACH y ESO","id": "88","tipo": "PS"},{"nombre": "Entornos de desarrollo","horas":3,"ciclo": "1ºDAM","id": "16","tipo": "PS"},{"nombre": "1Bachillerato","horas":2,"ciclo": "Optativas BACH y ESO","id": "87","tipo": "PS"},{"nombre": "2Bachillerato","horas":4,"ciclo": "Optativas BACH y ESO","id": "76","tipo": "PS"},{"nombre": "Informática 4ESO-Aplic","horas":2,"ciclo": "Optativas BACH y ESO","id": "77","tipo": "PS"},{"nombre": "Manolo","horas":21,"profe":"si","tipo": "PS"},{"nombre": "Planificación y adm de redes","horas":6,"ciclo": "1ASIR(Mañana)","id": "42","tipo": "PS"},{"nombre": "Servicios de Red e Internet","horas":7,"ciclo": "2ASIR(Tarde)","id": "46","tipo": "PS"},{"nombre": "Móviles","horas":5,"ciclo": "2ºDAM","id": "19","tipo": "PS"},{"nombre": "Programación de dispositivos móviles","horas":3,"ciclo": "2DAM-Elearning","id": "59","tipo": "PS"},{"nombre": "Raúl","horas":20,"profe":"si","tipo": "PS"},{"nombre": "Programación de Servicios","horas":3,"ciclo": "2ºDAM","id": "20","tipo": "PS"},{"nombre": "Bases de Datos","horas":6,"ciclo": "1DAM-Elearning","id": "53","tipo": "PS"},{"nombre": "Lenguajes de Marcas","horas":4,"ciclo": "1ASIR(Mañana)","id": "44","tipo": "PS"},{"nombre": "Informática 4 ESO - Acad 2","horas":2,"ciclo": "Optativas BACH y ESO","id": "89","tipo": "PS"},{"nombre": "Gestión de BD","horas":4,"ciclo": "1ASIR(Mañana)","id": "43","tipo": "PS"},{"nombre": "Tutor FCT(1h)","horas":1,"ciclo": "2DAM-Elearning","id": "92","tipo": "PS"},{"nombre": "Antonio Morales","horas":21,"profe":"si","tipo": "PS"},{"nombre": "Bases de Datos","horas":6,"ciclo": "1ºDAM","id": "13","tipo": "PS"},{"nombre": "Bases de Datos","horas":6,"ciclo": "1DAW(Tarde)","id": "65","tipo": "PS"},{"nombre": "Seguridad y alta disponibilidad","horas":5,"ciclo": "2ASIR(Tarde)","id": "49","tipo": "PS"},{"nombre": "FCT ( 22PRO 7RC 5FCT)","horas":4,"ciclo": "2ASIR(Tarde)","id": "51","tipo": "PS"},{"nombre": "Bautista","horas":20,"profe":"si","tipo": "PS"},{"nombre": "Acceso a Datos","horas":7,"ciclo": "2ºDAM","id": "17","tipo": "PS"},{"nombre": "Jefe de Estudios FP-1","horas":9,"ciclo": "Reducciones","id": "79","tipo": "PS"},{"nombre": "Acceso a Datos 4h","horas":4,"ciclo": "2DAM-Elearning","id": "94","tipo": "PS"},{"nombre": "José Luis Benito Andújar","horas":20,"profe":"si","tipo": "PS"},{"nombre": "Aplicaciones Web","horas":6,"ciclo": "1SMR(Tarde)","id": "33","tipo": "PS"},{"nombre": "Lenguaje de Marcas","horas":4,"ciclo": "1DAW(Tarde)","id": "67","tipo": "PS"},{"nombre": "Despliegue de aplicaciones Web","horas":5,"ciclo": "2DAW(Tarde)","id": "71","tipo": "PS"},{"nombre": "Lenguaje de marcas y sist.gest.empr.","horas":4,"ciclo": "1DAM-Elearning","id": "55","tipo": "PS"},{"nombre": "Coordinación FCT","horas":1,"ciclo": "2DAM-Elearning","id": "93","tipo": "PS"},{"nombre": "Tutoría 1SMR Tarde","horas":0,"ciclo": "Tutorías","id": "96","tipo": "PS"},{"nombre": "Inmaculada Castellanos","horas":0,"profe":"si","tipo": "PT"},{"nombre": "Elena Torres","horas":0,"profe":"si","tipo": "PT"},{"nombre": "José Luis Olivares","horas":0,"profe":"si","tipo": "PT"},{"nombre": "Salvio Quiralte","horas":0,"profe":"si","tipo": "PT"},{"nombre": "José Vicente Ruiz","horas":0,"profe":"si","tipo": "PT"},{"nombre": "Juana M. Sánchez","horas":0,"profe":"si","tipo": "PT"},{"nombre": "Diego Ortega","horas":0,"profe":"si","tipo": "PT"}],"ciclos":[{"nombre":"1ºDAM","modulos": [{"nombre":"Sistemas Informáticos","horas":6,"tipo": "PT","id":"63"},{"nombre":"Entornos de desarrollo","horas":3,"tipo": "PS","id":"16","clonado":"16","profe":"Ana Belén Castañeda"},{"nombre":"Lenguaje de Marcas y Sistemas","horas":4,"tipo": "PS","id":"15","clonado":"15","profe":"Mayte Olmedilla"},{"nombre":"Sistemas Informáticos","horas":6,"tipo": "PT","id":"14"},{"nombre":"Bases de Datos","horas":6,"tipo": "PS","id":"13","clonado":"13","profe":"Antonio Morales"},{"nombre":"Programación","horas":6,"tipo": "PS","id":"8","clonado":"8","profe":"Ángel Vela"}]},{"nombre":"2ºDAM","modulos": [{"nombre":"FCT (21PRO 1REP)","horas":4,"tipo": "PT","id":"90"},{"nombre":"Sistemas de Gestión Empresarial","horas":5,"tipo": "PT","id":"21"},{"nombre":"Programación de Servicios","horas":3,"tipo": "PS","id":"20","clonado":"20","profe":"Raúl"},{"nombre":"Móviles","horas":5,"tipo": "PS","id":"19","clonado":"19","profe":"Manolo"},{"nombre":"Desarrollo de Interfaces","horas":7,"tipo": "PT","id":"18"},{"nombre":"Acceso a Datos","horas":7,"tipo": "PS","id":"17","clonado":"17","profe":"Bautista"}]},{"nombre":"1SMR(Mañana)","modulos": [{"nombre":"Sistemas monoususario","horas":6,"tipo": "PT","id":"25"},{"nombre":"Montaje  y mantenimiento de equipos","horas":7,"tipo": "PT","id":"24"},{"nombre":"Aplicaciones Web","horas":6,"tipo": "PS","id":"23","clonado":"23","profe":"Fernando Tejero"},{"nombre":"Redes Locales","horas":6,"tipo": "PS","id":"22","clonado":"22","profe":"Fernando Tejero"}]},{"nombre":"2SMR(Mañana)","modulos": [{"nombre":"FCT (21 PRO   6 a FCT   3 REP)","horas":4,"tipo": "PS","id":"84","clonado":"84","profe":"Mayte Olmedilla"},{"nombre":"Servicios en Red","horas":6,"tipo": "PS","id":"29","clonado":"29","profe":"Mayte Olmedilla"},{"nombre":"Seguridad Informática","horas":5,"tipo": "PS","id":"28","clonado":"28","profe":"Fernando Tejero"},{"nombre":"Sistemas operativos en red","horas":7,"tipo": "PT","id":"27"},{"nombre":"Aplicaciones ofimáticas","horas":9,"tipo": "PT","id":"26"}]},{"nombre":"1SMR(Tarde)","modulos": [{"nombre":"Sistemas monousuario","horas":6,"tipo": "PT","id":"35"},{"nombre":"Montaje y mantenimiento de equipos","horas":7,"tipo": "PT","id":"34"},{"nombre":"Aplicaciones Web","horas":6,"tipo": "PS","id":"33","clonado":"33","profe":"José Luis Benito Andújar"},{"nombre":"Redes Locales","horas":6,"tipo": "PS","id":"32","clonado":"32","profe":"Ana Belén Castañeda"}]},{"nombre":"2SMR(Tarde)","modulos": [{"nombre":"FCT (15PRO 2FCT)","horas":3,"tipo": "PS","id":"40","clonado":"40","profe":"Francisco Javier Cortés"},{"nombre":"Servicios en Red","horas":6,"tipo": "PS","id":"39","clonado":"39","profe":"Francisco Javier Cortés"},{"nombre":"Seguridad Informática","horas":5,"tipo": "PS","id":"38","clonado":"38","profe":"Francisco Javier Cortés"},{"nombre":"Sistemas Operativos en red","horas":7,"tipo": "PT","id":"37"},{"nombre":"Aplicaciones Ofimáticas","horas":9,"tipo": "PT","id":"36"}]},{"nombre":"1ASIR(Mañana)","modulos": [{"nombre":"Lenguajes de Marcas","horas":4,"tipo": "PS","id":"44","clonado":"44","profe":"Raúl"},{"nombre":"Gestión de BD","horas":4,"tipo": "PS","id":"43","clonado":"43","profe":"Raúl"},{"nombre":"Planificación y adm de redes","horas":6,"tipo": "PS","id":"42","clonado":"42","profe":"Manolo"},{"nombre":"Implantación de SSOO","horas":7,"tipo": "PT","id":"41"}]},{"nombre":"2ASIR(Tarde)","modulos": [{"nombre":"Administración de sistemas gest. BD","horas":3,"tipo": "PS","id":"86","clonado":"86","profe":"Francisco Javier Cortés"},{"nombre":"Implantación de Aplicaciones Web","horas":5,"tipo": "PS","id":"85","clonado":"85","profe":"Ángel Vela"},{"nombre":"FCT ( 22PRO 7RC 5FCT)","horas":4,"tipo": "PS","id":"51","clonado":"51","profe":"Antonio Morales"},{"nombre":"Seguridad y alta disponibilidad","horas":5,"tipo": "PS","id":"49","clonado":"49","profe":"Antonio Morales"},{"nombre":"Administración de Sistemas Operativos","horas":7,"tipo": "PT","id":"47"},{"nombre":"Servicios de Red e Internet","horas":7,"tipo": "PS","id":"46","clonado":"46","profe":"Manolo"}]},{"nombre":"1DAM-Elearning","modulos": [{"nombre":"Entornos de Desarrollo","horas":3,"tipo": "PS","id":"56","clonado":"56","profe":"Ángel Vela"},{"nombre":"Lenguaje de marcas y sist.gest.empr.","horas":4,"tipo": "PS","id":"55","clonado":"55","profe":"José Luis Benito Andújar"},{"nombre":"Programación","horas":6,"tipo": "PS","id":"54","clonado":"54","profe":"Mayte Olmedilla"},{"nombre":"Bases de Datos","horas":6,"tipo": "PS","id":"53","clonado":"53","profe":"Raúl"},{"nombre":"Sistemas Informáticos","horas":6,"tipo": "PT","id":"52"}]},{"nombre":"2DAM-Elearning","modulos": [{"nombre":"Acceso a Datos 1h","horas":1,"tipo": "PS","id":"95","clonado":"95","profe":"Ana Belén Castañeda"},{"nombre":"Acceso a Datos 4h","horas":4,"tipo": "PS","id":"94","clonado":"94","profe":"Bautista"},{"nombre":"Coordinación FCT","horas":1,"tipo": "PS","id":"93","clonado":"93","profe":"José Luis Benito Andújar"},{"nombre":"Tutor FCT(1h)","horas":1,"tipo": "PS","id":"92","clonado":"92","profe":"Raúl"},{"nombre":"S.G Empresarial","horas":3,"tipo": "PT","id":"61"},{"nombre":"Programación de servicios","horas":2,"tipo": "PS","id":"60","clonado":"60","profe":"Samuel"},{"nombre":"Programación de dispositivos móviles","horas":3,"tipo": "PS","id":"59","clonado":"59","profe":"Manolo"},{"nombre":"Desarrollo de Interfaces","horas":5,"tipo": "PT","id":"58"}]},{"nombre":"1DAW(Tarde)","modulos": [{"nombre":"Entornos de Desarrollo","horas":3,"tipo": "PS","id":"68","clonado":"68","profe":"Francisco Javier Cortés"},{"nombre":"Lenguaje de Marcas","horas":4,"tipo": "PS","id":"67","clonado":"67","profe":"José Luis Benito Andújar"},{"nombre":"Programación","horas":6,"tipo": "PS","id":"66","clonado":"66","profe":"Ángel Vela"},{"nombre":"Bases de Datos","horas":6,"tipo": "PS","id":"65","clonado":"65","profe":"Antonio Morales"},{"nombre":"Sistemas Informáticos","horas":6,"tipo": "PT","id":"64"}]},{"nombre":"2DAW(Tarde)","modulos": [{"nombre":"FCT","horas":4,"tipo": "PT","id":"73"},{"nombre":"Diseño de interfaces Web","horas":6,"tipo": "PT","id":"72"},{"nombre":"Despliegue de aplicaciones Web","horas":5,"tipo": "PS","id":"71","clonado":"71","profe":"José Luis Benito Andújar"},{"nombre":"Desarrollos WEB en entornos servidor","horas":9,"tipo": "PS","id":"70","clonado":"70","profe":"Samuel"},{"nombre":"Desarrollos WEB en entornos cliente","horas":7,"tipo": "PT","id":"69"}]},{"nombre":"Optativas BACH y ESO","modulos": [{"nombre":"Informática 4 ESO - Acad 2","horas":2,"tipo": "PS","id":"89","clonado":"89","profe":"Raúl"},{"nombre":"Informática 4 ESO - Acad 1","horas":2,"tipo": "PS","id":"88","clonado":"88","profe":"Ana Belén Castañeda"},{"nombre":"1Bachillerato","horas":2,"tipo": "PS","id":"87","clonado":"87","profe":"Ana Belén Castañeda"},{"nombre":"Informática 4ESO-Aplic","horas":2,"tipo": "PS","id":"77","clonado":"77","profe":"Ana Belén Castañeda"},{"nombre":"2Bachillerato","horas":4,"tipo": "PS","id":"76","clonado":"76","profe":"Ana Belén Castañeda"}]},{"nombre":"Reducciones","modulos": [{"nombre":"Jefe de departamento","horas":3,"tipo": "PS","id":"83","clonado":"83","profe":"Fernando Tejero"},{"nombre":"Coordinador Familia Profesional","horas":1,"tipo": "PT","id":"82"},{"nombre":"Responsable de Formación","horas":4,"tipo": "PT","id":"81"},{"nombre":"Jefe de Estudios FP-2","horas":9,"tipo": "PS","id":"80","clonado":"80","profe":"Samuel"},{"nombre":"Jefe de Estudios FP-1","horas":9,"tipo": "PS","id":"79","clonado":"79","profe":"Bautista"}]},{"nombre":"Tutorías","modulos": [{"nombre":"Tutoría 1SMR Tarde","horas":0,"tipo": "PS","id":"96","clonado":"96","profe":"José Luis Benito Andújar"}]}]}';
           //let horario = JSON.parse(cadenaJson);
           let horario = {};
          
            fetch('horariosFERNANDO.json')
                    .then(function(response) {
                     if (!response.ok) {
                          throw new Error('OH OH No se pudo cargar el archivo JSON.');
                    }
                return response.json(); // Convertimos la respuesta a JSON
            })
            .then(function(data) {
                // La variable "data" ahora contiene el objeto JavaScript
                //console.log(data);

                // Puedes acceder a las propiedades del objeto, por ejemplo:
                alert("Campo1:"+ data.profesorado[0].nombre); // Asumiendo que el JSON original tiene "campo1"
                horario = data;
                // Aqu铆 puedes realizar cualquier operaci贸n que necesites con los datos del archivo JSON
            })
            .catch(function(error) {
                console.error('Se produjo un error al cargar el archivo JSON:', error);
            });

                // Accediendo a las propiedades del objeto 'datos'
               
               
          // profesorado = document.getElementById("profesorado");
          //horario = data.datos;
          //bucle sobre el profesorado
          for ( i=0;i<horario.profesorado.length;i++ ) {
           nombre = horario.profesorado[i].nombre;
           horas = horario.profesorado[i].horas;
           tipo = horario.profesorado[i].tipo;
           profe = horario.profesorado[i].profe;
           let profesor = document.createElement("div");
           profesor.setAttribute('horas',horas);
           profesor.setAttribute('tipo',tipo);
           profesor.setAttribute('nombre',nombre);
           if ( horario.profesorado[i].profe!=null) {

             /* profe=maximoProfesor;
              maximoProfesor++;*/
               profesor.setAttribute('profe',profe);
               pintaProfe(profesor);
           } else { //no es un profesor 
               if ( !reinicia ) {//cuando reinicia no carga los módulos asignados
               profesor.setAttribute('ciclo',profe = horario.profesorado[i].ciclo);
               profesor.setAttribute('id',profe = horario.profesorado[i].id);
               pintaModuloColocado(profesor);
               }
           }
           
           profesorado.appendChild(profesor);
          } //FIN del bucle sobre el profesorado
          //bucle sobre los ciclos
           for ( i=0; i<horario.ciclos.length;i++){
               nombreCiclo=horario.ciclos[i].nombre;
               
               /** lo añade a la lista de ciclos del formulario modal **/
               listaCiclos=document.getElementById('listaCiclos');
                let cicloLista = document.createElement("option");
                cicloLista.innerHTML = nombreCiclo;
                cicloLista.setAttribute("value",nombreCiclo);
                listaCiclos.appendChild(cicloLista);
               /** FIN lo añade a la lista de ciclos del formulario modal **/
                
               let ciclo = document.createElement("div");
               ciclo.setAttribute('nombre',nombreCiclo);
               ciclo.setAttribute('tipo',"ciclo"); // con esto marca el elemento como ciclo, no como móduloç
               //los ciclos se enumeran con el atributo numciclo
               ciclo.setAttribute('numciclo',maximoCiclo);
               maximoCiclo+=1;
               
               pintaCiclo(ciclo);
               ciclosmodulos.appendChild(ciclo);
               //ahora añade los módulos
               for ( j=0; j<horario.ciclos[i].modulos.length;j++){
                   let modulo = horario.ciclos[i].modulos[j];
                   nombreModulo = modulo.nombre;
                   horasModulo = modulo.horas;
                   tipoModulo = modulo.tipo;
                   profeModulo = modulo.profe;
                   clonadoModulo = modulo.clonado;
                   idModulo = modulo.id;
                   if ( idModulo==null) {
                       idModulo = maximoModulo+1;
                       maximoModulo = idModulo
                   }
                   idModuloNum = parseInt(idModulo);
                   if ( idModuloNum> maximoModulo ) {
                       maximoModulo=idModuloNum;
                   }
                   let capaModulo = document.createElement("div");
                   capaModulo.setAttribute('horas',horasModulo);
                   capaModulo.setAttribute('nombre',nombreModulo);
                   capaModulo.setAttribute('tipo',tipoModulo);
                   if (modulo.profe) {
                       capaModulo.setAttribute('profe',profeModulo);
                   }
                   
                   capaModulo.setAttribute('ciclo',nombreCiclo);
                   capaModulo.setAttribute('id',idModulo);
                   if ( reinicia ) {
                        modulo.clonado = false
                   }
                   
                   if ( modulo.clonado ) {
                   capaModulo.setAttribute('clonado',modulo.clonado );
                   }
                   pintaModulo(capaModulo);
                   ciclosmodulos.appendChild(capaModulo);
                   
                   
               }
               
               
           }// FIN de bucle sobre los ciclos
        } //fin del if
        };//fin del function

function escribeDatos(jsonArr){
    var xhr = new XMLHttpRequest(),
    method = "GET",
    jsonRequestURL = "index2.php";
cargados=false;
xhr.open(method, jsonRequestURL, true);
xhr.onreadystatechange = function()
{
    if(xhr.readyState == 4 && xhr.status == 200 && !cargados)
    {
        // we convert your JSON into JavaScript object
        //jsonArr = JSON.parse(xhr.responseText);

        console.log(jsonArr);
        // we add new value:
        //jsonArr.push({"nissan": "sentra", "color": "green"});
            console.log(jsonArr);
        // we send with new request the updated JSON file to the server:
        xhr.open("POST", jsonRequestURL, true);
        xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        // if you want to handle the POST response write (in this case you do not need it):
        // xhr.onreadystatechange = function(){ /* handle POST response */ };
        //xhr.send("jsonTxt={"+JSON.stringify(jsonArr)+"}");
        xhr.send("jsonTxt={"+jsonArr+"}");
        cargados=true;
        // but on this place you have to have a server for write updated JSON to the file
    }
};
xhr.send(null);
    
}

function pintaProfe(e) { //escribe el contenido de la div según sus atributos
    e.classList.add("titulo");
    e.classList.add("list-group-item");
	horasProfe = e.getAttribute("horas");
	nombreProfe = e.getAttribute("nombre");
	tipoProfe =  e.getAttribute("tipo");
	if (horasProfe < 20) {
		color = "red";
	} else {
		color = "green";
	}
	estilo = " style='color:" + color + "'";
	if ( tipoProfe=="PS" ) {
	    e.style.backgroundColor="aqua";
	} else {
	    e.style.backgroundColor="antiquewhite";
	}
	e.innerHTML = "<span style='font-weight:bold'>" + tipoProfe + " " + nombreProfe + "<span" + estilo + ">" + " ( " + horasProfe + " h)" + "</span>" + "</span>" 
	+ '<a style="float:right" data-toggle="modal" onclick="editaProfesor(this,2)" href="" >Editar</a>'
	+ ' '+ '<a style="float:right" data-toggle="modal" onclick="borraCajas(this,1)" href="" >Borrar</a>';
}
function pintaCiclo(e){
    e.classList.add("titulo");
    e.classList.add("list-group-item");
    nombreCiclo = e.getAttribute("nombre");
    e.innerHTML = '<span style="font-weight:bold">' + nombreCiclo +'</span>'+ '<a style="float:right" data-toggle="modal" onclick="editaCiclo(this,2)" href="" >Editar</a>';
}
function borraModulo(e){
    		if ( confirm('Está seguro de que quieres borrar el módulo. De todos modos los cambios no serán definitivos hasta que guarde los datos')==true ) {
			 //elem = e.parentNode;
			 elem = document.getElementById("1");
			 elem.parentNode.removeChild(elem);       

	    } else {
		}
}


function pintaModulo(e) {
	horasModulo = e.getAttribute("horas");
    e.classList.add("list-group-item");
	nombre = e.getAttribute("nombre");
	//ciclo = e.getAttribute("ciclo");
	tipo = e.getAttribute("tipo");
	cadenaProfe = "";
	if (e.getAttribute("profe") != null) {
		nombreProfe = e.getAttribute("profe");
		cadenaProfe = "->" + nombreProfe;
		cadenaEdicion = "";
	} else {
	    cadenaEdicion ='<a style="float:right" data-toggle="modal" onclick="editaModulo(this)" href="" >Editar</a> '
	+ '<a style="float:right" data-toggle="modal" onclick="borraCajas(this,2)" href="" >Borrar</a> ';
	}
	e.style.fontWeight="normal"; 
	if ( tipo=="PT") {
	    e.style.backgroundColor="FloralWhite";
	}
	if ( tipo=="PS") {
	    e.style.backgroundColor="LightCyan";
	}

	e.innerHTML = "<i class='fas fa-grip-lines'></i>"+ nombre + "(" + horasModulo + "h) " + tipo + cadenaProfe + cadenaEdicion;
	if (e.getAttribute("clonado")!=null ) {
			e.style.color = "red";
		e.style.opacity = "0.5";
		e.style.fontWeight="bold";
		e.classList.add('titulo');
	} 
}

function pintaModuloColocado(e) {
	horasModulo = e.getAttribute("horas");
	ciclo = e.getAttribute("ciclo");
    e.classList.add("list-group-item");
    tipo = e.getAttribute("tipo");
    if ( tipo=="PT") {
	    e.style.backgroundColor="FloralWhite";
	}
	if ( tipo=="PS") {
	    e.style.backgroundColor="LightCyan";
	}
	nombre = e.getAttribute("nombre");
	//ciclo = e.getAttribute("ciclo");

	cadenaProfe = "";

	e.innerHTML = "<i class='fas fa-grip-lines mr-2'></i>"+ nombre + "(" + horasModulo + "h) " + tipo + "["+ ciclo +"]";

}
function reiniciaModulo(e){
	e.classList.remove('titulo');
	e.removeAttribute('clonado');
	e.removeAttribute('profe'); //ya no está asociado a ningún profe
	e.style.color = "black";
	e.style.opacity = 1;
	pintaModulo(e);

}

const listaProfesorado = Sortable.create(profesorado, {
	group: {
		name: "lista-tareas",
		pull: true,
		
		put: true
	},
	animation: 150,
	easing: "cubic-bezier(0.895, 0.03, 0.685, 0.22)",
	handle: ".fa-grip-lines",
	filter: ".titulo",
	// ghostClass: "active",
	chosenClass: "active",
	//dragClass: "invisible"
	dataIdAttr: "data-identificador",
	sort: false,
	/* onChoose: (evento) => {
		console.log('Se ha seleccionado un elemento')},
	onUnchoose: (evento) => { console.log('Se ha deseleccionado un elemento') },
	onStart: (evento) => { console.log('Se inicio el drag and drop') },
	
	onEnd: (evento) => { console.log('On End') },

	*/
	
	onAdd: (evt) => { //AGREGO UN ELEMENTO A LA LISTA DE PROFES
		elementoAdd = evt.item;
		//le pongo el nombre del ciclo al final del nombre
		let ciclo = elementoAdd.getAttribute("ciclo");
		pintaModuloColocado(elementoAdd);
		//elementoAdd.innerHTML = elementoAdd.innerHTML + "["+ciclo+"]";
		let horasAdd = elementoAdd.getAttribute('horas'); //averiguo las horas del elemento añadido
		let tipoAdd = elementoAdd.getAttribute('tipo'); //averiguo las horas del elemento añadido
		let idAdd = elementoAdd.getAttribute('id'); //averiguo el id del elemento añadido
		let padre = elementoAdd.parentElement;
		//no se puede poner el primero para eso averguo en que posición está
		esPrimero=false;
		for (i = 0; i < padre.children.length; i++){
			let hijo = padre.children[i];
			let idHijo = hijo.getAttribute('id');
			if (idHijo == idAdd && i==0 ) {
				console.log( "indice: "+ i);
				elementoAdd.parentNode.removeChild(elementoAdd); //borro el elemento si lo ha colocado al principio
				esPrimero=true;
				let elementoClonado = document.querySelector("div[clonado='" + idHijo + "'");
				reiniciaModulo(elementoClonado);
			}
		}
		if (!esPrimero) {
			encontrado = false;
			for (i = padre.children.length - 1; i >= 0; i--) { //recorro los elementos hijo del último al primero
				let hijo = padre.children[i];
				let idHijo = hijo.getAttribute('id');
				if ( idHijo == idAdd ) {
					encontrado = true;
				}
				//console.log(hijo);
				if (hijo.classList.contains("titulo") && encontrado) { //SI ES PROFESOR
					let horasProfe = 0;
					if (hijo.getAttribute("horas")) {
						horasProfe = hijo.getAttribute("horas");
					}
					horasProfe = parseInt(horasProfe) + parseInt(horasAdd);
                    tipoProfe = hijo.getAttribute("tipo"); //averigua el tipo PS o PT del profe
					hijo.setAttribute("horas", horasProfe); //guarda en el atributo el número de horas
					nombreProfe = hijo.getAttribute("nombre");
					if ( tipoAdd!=tipoProfe ){
					    alert("Vas a signar un modulo de " +tipoAdd + " a docente " + tipoProfe ); 
					}
					
    					pintaProfe(hijo);
    					//ahora pone el nombre del profe en la lista de la derecha
    					let elementoClonado = document.querySelector("div[clonado='" + idAdd + "'");
    
    					//elementoClonado.innerHTML = elementoClonado.innerHTML + "->" + nombreProfe;
    					elementoClonado.setAttribute("profe", nombreProfe);
    					pintaModulo(elementoClonado);
    					break;
					
				} else { //SI ES UN MÓDULO 

				}
				horas = hijo.getAttribute('horas');
			}
		}
	},

	onRemove: (evt) => {
		

	 },
		/*
	onUpdate: (evento) => { console.log('Se actualizo la lista') },
	onFilter: (evento) => { console.log('Se intento mover un elemento filtrado') },
	onMove: (evento) => { console.log('Se movio un elemento') }, 
	onChange: (evt) => {
		console.log('CHANGE')
	},
/*	store: {
		set: function(sortable){
			const orden = sortable.toArray();
			localStorage.setItem('lista-tareas', orden.join('|'));
		},

		get: function(){
			const orden = localStorage.getItem('lista-tareas');
			return orden ? orden.split('|') : [];
		}
	},*/

	 /* onChoose: (evento) => { 
	 	console.log('Se ha seleccionado un elemento')
	 },
	 onUnchoose: (evento) => { console.log('Se ha deseleccionado un elemento') },
	 onStart: (evento) => { console.log('Se inicio el drag and drop') },
	 onEnd: (evento) => { console.log('On End') },
	 onAdd: (evento) => { console.log('Se agrego un elemento a la lista') },
	 onRemove: (evento) => { console.log('Se elimino un elemento a la lista') },
	 onUpdate: (evento) => { console.log('Se actualizo la lista') },
	 onFilter: (evento) => { console.log('Se intento mover un elemento filtrado') },
	 onMove: (evento) => { console.log('Se movio un elemento') },
	 onChange: (evento) => { console.log('Un elemento cambio de lugar') }, */
});

const sortablaCiclosModulos = Sortable.create(ciclosmodulos, {
	group: {
		name: "lista-tareas",
		pull: "clone",
		put: true
	},
	animation: 150,
	easing: "cubic-bezier(0.895, 0.03, 0.685, 0.22)",
	handle: ".fa-grip-lines",
	filter: ".titulo",
	// ghostClass: "active",
	chosenClass: "active",
	sort:false,
	//dragClass: "invisible"
	/**onEnd: (evt) => {
		var itemEl = evt.item;  // dragged HTMLElement
		console.log(itemEl);    // muestra el objeto
		var id = itemEl.getAttribute("id");
		console.log("id:" + id);
		alert("id:" + id);
		let modulos = document.getElementById(id);
		modulos.style.color="red";

	},*/

	// Called when creating a clone of element
	onClone: function (/**Event*/evt) {
		var origEl = evt.item;
		var cloneEl = evt.clone;
		//console.log(origEl);
		//console.log(cloneEl);
		cloneEl.style.color = "red";
		cloneEl.style.opacity = "0.5";
		cloneEl.classList.add('titulo');
		let id = origEl.getAttribute("id");
		cloneEl.setAttribute("clonado",id); //"Marca" elemento clonado con el atributo "clonado" y el id
		/*var id = origEl.getAttribute("id");

		let modulos = document.getElementById(id);
		modulos.style.color = "green";*/

	},
	onAdd: (evt) => {//cuando "devuelvo un módulo a la lista"
		elementoAdd = evt.item;
		let id = elementoAdd.getAttribute("id");
		let elementoClonado=document.querySelector("div[clonado='"+id+ "'");
		/*elementoClonado.style.color="black";
		elementoClonado.style.opacity = 1;
		elementoClonado.classList.toggle('titulo');
		elementoClonado.removeAttribute('clonado');*/
		let nombreProfe = elementoClonado.getAttribute('profe');
		let profeAsociado= document.querySelector("div[nombre='" + nombreProfe + "'");
		let horasprofeAsociado = parseInt(profeAsociado.getAttribute("horas"));
		let horasModulo = parseInt(elementoClonado.getAttribute("horas"));
		horasprofeAsociado = horasprofeAsociado - horasModulo;
		profeAsociado.setAttribute("horas", horasprofeAsociado);
		pintaProfe(profeAsociado);

		reiniciaModulo(elementoClonado);
		elementoAdd.parentNode.removeChild(elementoAdd); //se elimina el elemento añadido
		console.log('Se agrego un elemento a la lista') },
	/*onChoose: (evento) => {
		console.log('Se ha seleccionado un elemento')
	},
	onUnchoose: (evento) => { console.log('Se ha deseleccionado un elemento') },
	onStart: (evento) => { console.log('Se inicio el drag and drop') },
	onEnd: (evento) => { console.log('On End') },


	
	onRemove: (evento) => { console.log('Se elimino un elemento a la lista') },
	onUpdate: (evento) => { console.log('Se actualizo la lista') },
	onFilter: (evento) => { console.log('Se intento mover un elemento filtrado') },
	onMove: (evento) => { console.log('Se movio un elemento') },
	onChange: (evento) => { console.log('Un elemento cambio de lugar') },*/

});



const btnToggle = document.getElementById('toggle');
function Confirmacion(){
		if ( confirm('Los datos se almacenan en el sevidor y se sobreescriben¿Está seguro de que quiere guardarlos?')==true ) {
			alert("Los datos se han alamacenado");
			return true;
	    } else {
			return false;
		}
	}


btnToggle.addEventListener('click', () => {
    if ( Confirmacion() ) {
            CadenaHorario=creaCadenaHorario();
            escribeDatos(CadenaHorario);
    }
});

const btnInsertaNuevoModulo = document.getElementById('btnInsertaNuevoModulo');
btnInsertaNuevoModulo.addEventListener('click', () => {
    insertaNuevoModulo();
} ); 

const btnActualizaNuevoModulo = document.getElementById('btnActualizaNuevoModulo');
btnActualizaNuevoModulo.addEventListener('click', () => {
    actualizaNuevoModulo();
} ); 

function insertaNuevoModulo(){
    listaCiclos = document.getElementById("listaCiclos");
    nuevoModulo= document.getElementById("nuevoModulo").value;
    tipoNuevoModulo= document.getElementById("tipoNuevoModulo").value;
    horasNuevoModulo= document.getElementById("horasNuevoModulo").value;
    
    cicloNuevoModulo = listaCiclos.value;
    cicloIgual = ciclosmodulos.querySelector("div[ciclo='" + cicloNuevoModulo + "'");
    console.log(cicloIgual);
    let nuevoModuloInsertar= document.createElement("div");
    nuevoModuloInsertar.setAttribute("nombre",nuevoModulo);
    nuevoModuloInsertar.setAttribute("ciclo",cicloNuevoModulo);
    nuevoModuloInsertar.setAttribute("horas",horasNuevoModulo);
    nuevoModuloInsertar.setAttribute("tipo",tipoNuevoModulo);
    //cálculo del nuevo id
    //let nuevoId = cicloIgual.getAttribute("id")+"1";
    let nuevoId = maximoModulo+1;
    maximoModulo = nuevoId;
    nuevoModuloInsertar.setAttribute("id",nuevoId);
    
   pintaModulo(nuevoModuloInsertar);
    if ( cicloIgual !=null ) {
        ciclosmodulos.insertBefore(nuevoModuloInsertar, cicloIgual);
    } else
    {
        ciclosmodulos.appendChild(nuevoModuloInsertar);
    }
    

}

function actualizaNuevoModulo(){
    insertaNuevoModulo();
    moduloEliminar = ciclosmodulos.querySelector("div[id='" + numModuloActualiza + "'");
    moduloEliminar.parentNode.removeChild(moduloEliminar);
}



function editaModulo(e){
    $('#nuevomodulo').modal('show');
    let modulo = e.parentElement;
             btnInsertaNuevoModulo.style.display="none";
         btnActualizaNuevoModulo.style.display="block";
    listaCiclosActualiza = document.getElementById("listaCiclos");
    nuevoModuloActualiza= document.getElementById("nuevoModulo");
    tipoNuevoModuloActualiza= document.getElementById("tipoNuevoModulo");
    horasNuevoModuloActualiza= document.getElementById("horasNuevoModulo");
    nuevoModuloActualiza.value=modulo.getAttribute("nombre");
    tipoPSPT=modulo.getAttribute("tipo");
    id=modulo.getAttribute("id");
    numModuloActualiza =id; //guarda en la variable global el valor de su id para actualizarlo
    horasNuevoModuloActualiza.value=modulo.getAttribute("horas");
    ciclo=modulo.getAttribute("ciclo");
    /********** recorre todos los options del select listaCiclosActualiza *******/
    for ( i=0; i<listaCiclosActualiza.children.length; i++ ){
        let option = listaCiclosActualiza.children[i];
        if (option.getAttribute("value")==ciclo){
            option.setAttribute("selected","selected");
        } else
        {
            option.removeAttribute("selected");
        }
        
        
    }
    
    /********** recorre todos los options del select listaCiclosActualiza *******/
    for ( i=0; i<tipoNuevoModuloActualiza.children.length; i++ ){
        let option2 = tipoNuevoModuloActualiza.children[i];
        if (option2.getAttribute("value")==tipoPSPT){
            option2.setAttribute("selected","selected");
        } else
        {
            option2.removeAttribute("selected");
        }
        
        
    }
    

}


//^*****************************************************************
//*  INSERCIÓN Y ACTUALIZACIÓN DEL PROFESOR
//******************************************************************
const btnInsertaProfesor = document.getElementById('btnInsertaProfesor');
const btnActualizaProfesor = document.getElementById('btnActualizaProfesor');


function insertaProfesor(){ //es llamado desde el botón ACEPTAR de la ventana modal
    let profesor = document.createElement("div");
    profesor.setAttribute("horas","0");
    tipo= document.getElementById("tipoProfesor1").value;
    profesor.setAttribute("tipo",tipo);
    nombreProfesor= document.getElementById("nombreProfesor").value;
    profesor.setAttribute("nombre",nombreProfesor);
    maximoProfesor +=1; 
    profesor.setAttribute("profe",maximoProfesor);
    pintaProfe(profesor);
    profesorado.appendChild(profesor);
    
    
}

const btnMenuInsertaProfesor = document.getElementById('btnMenuInsertaProfesor');

btnMenuInsertaProfesor.addEventListener('click', () => {
    editaProfesor(null,1);
} ); 

function actualizaProfesor(numProfe) {
    let profesor = document.querySelector("div[profe='" + numProfeActualiza + "'");
    tipo= document.getElementById("tipoProfesor1").value;
    profesor.setAttribute("tipo",tipo);
    nombreProfesor= document.getElementById("nombreProfesor").value;
    profesor.setAttribute("nombre",nombreProfesor);
    pintaProfe(profesor);
   
    
}

btnInsertaProfesor.addEventListener('click', () => {
                insertaProfesor();
            } ); 
            
btnActualizaProfesor.addEventListener('click', () => {
                actualizaProfesor(numProfe);
            } ); 
            
function editaProfesor(e,accion){
    if (accion==1){ //1-inserta
        document.getElementById("nombreProfesor").value="";
         $('#insertaProfesor').modal('show');
         btnActualizaProfesor.style.display="none";
         btnInsertaProfesor.style.display="block";

    } else
    { //2-actualiza. coloca los atributos del profesor en el modal
         $('#insertaProfesor').modal('show');
        
         let profesor = e.parentElement;
         nombre = profesor.getAttribute("nombre");
         numProfe = profesor.getAttribute("profe");
         numProfeActualiza = numProfe;
         
         
         document.getElementById("nombreProfesor").value=nombre;
         tipo = document.getElementById("tipoProfesor1");
         tipoPSPT=profesor.getAttribute("tipo");
             /********** recorre todos los options del select listaCiclosActualiza *******/
            for ( i=0; i<tipo.children.length; i++ ){
                let option2 = tipo.children[i];
                if (option2.getAttribute("value")==tipoPSPT){
                    option2.setAttribute("selected","selected");
                } else
                {
                    option2.removeAttribute("selected");
                }
                
                
            }
            /********** FIN DE recorre todos los options del select listaCiclosActualiza *******/
            btnInsertaProfesor.style.display="none";
            btnActualizaProfesor.style.display="block";

         
    }
}
//*******************************************************************
//*    INSERCIÓN NUEVO CICLO
//*******************************************************************
const btnMenuNuevoCiclo = document.getElementById('btnMenuNuevoCiclo');

btnMenuNuevoCiclo.addEventListener('click', () => {
    editaCiclo(null,1);
} ); 

// estos son los botones del modal
const btnInsertaCiclo = document.getElementById('btnInsertaCiclo');
const btnActualizaCiclo = document.getElementById('btnActualizaCiclo');
btnInsertaCiclo.addEventListener('click', () => {
                insertaCiclo();
            } ); 
            
btnActualizaCiclo.addEventListener('click', () => {
                actualizaCiclo();
            } ); 

function actualizaCiclo() {
    let ciclo = document.querySelector("div[numciclo='" + numCicloActualiza + "'");
    nombre= document.getElementById("nombreCiclo").value;
    ciclo.setAttribute("nombre",nombre);
    pintaCiclo(ciclo);
    
}
function insertaCiclo(){ //es llamado desde el botón ACEPTAR de la ventana modal
    let nuevoCiclo = document.createElement("div");
    nuevoCiclo.setAttribute("nombre",document.getElementById("nombreCiclo").value);
    maximoCiclo +=1; 
    nuevoCiclo.setAttribute("tipo","ciclo");
    pintaCiclo(nuevoCiclo);
    ciclosmodulos.appendChild(nuevoCiclo);
    
}

function editaCiclo(e,accion){
    if (accion==1){ //1-inserta
        document.getElementById("nombreCiclo").value="";
         $('#insertaCiclo').modal('show');
         btnActualizaCiclo.style.display="none";
         btnInsertaCiclo.style.display="block";

    } else
    { //2-actualiza. coloca los atributos del profesor en el modal
         $('#insertaCiclo').modal('show');

         let ciclo = e.parentElement;
         nombre = ciclo.getAttribute("nombre");
         numCicloActualiza = ciclo.getAttribute("numciclo");
         document.getElementById("nombreCiclo").value=nombre;

            /********** FIN DE recorre todos los options del select listaCiclosActualiza *******/
            btnInsertaCiclo.style.display="none";
            btnActualizaCiclo.style.display="block";

         
    }
}
//*******************************************************************
//*    BORRADO DE UN MODULO Y PROFESOR/A
//*******************************************************************
const btnAceptaBorradoModulo = document.getElementById('btnAceptaBorradoModulo');
const btnAceptaBorradoProfe = document.getElementById('btnAceptaBorradoProfe');

btnAceptaBorradoModulo.addEventListener('click', () => {
    borraModulo();
} ); 

btnAceptaBorradoProfe.addEventListener('click', () => {
    borraProfe();
} ); 

function borraProfe(){ //es llamado desde el botón ACEPTAR de la ventana modal
    moduloBorrar=profesorado.querySelector("div[profe='" + numProfeActualiza + "'");
    moduloBorrar.parentNode.removeChild(moduloBorrar);   
}


function borraModulo(){ //es llamado desde el botón ACEPTAR de la ventana modal
    moduloBorrar=document.getElementById(numModuloActualiza);
    moduloBorrar.parentNode.removeChild(moduloBorrar);   
}

function borraCajas(e,accion){
    $('#confirmaborrado').modal('show');
    if (accion==1){ //1-borra profe
         let modulo = e.parentElement;
         numProfeActualiza = modulo.getAttribute("profe");
            btnAceptaBorradoProfe.style.display="block";
            btnAceptaBorradoModulo.style.display="none";

    } else //borra modulo
    { //2-actualiza. coloca los atributos del profesor en el modal


         let modulo = e.parentElement;
         numModuloActualiza = modulo.getAttribute("id");
            btnAceptaBorradoProfe.style.display="none";
            btnAceptaBorradoModulo.style.display="block";

         
    }
}